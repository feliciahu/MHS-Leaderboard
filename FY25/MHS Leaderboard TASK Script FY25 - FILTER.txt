USE ROLE SBX_EA_GENERAL_FR;
USE DATABASE SBX_PSAS_DB;
USE SCHEMA SALES_OPS_GOV;
USE WAREHOUSE SBX_EA_GENERAL_FR_WH;

--SHOW TASKS LIKE 'TSK_FELICIA_H_FY24_MHS_LEADERBOARD_FILTER%'
--DESC TASK TSK_FELICIA_H_FY24_MHS_LEADERBOARD_FILTER
select *  from table(SBX_PSAS_DB.INFORMATION_SCHEMA.task_history(
scheduled_time_range_start=>dateadd('hour',-24,current_timestamp()),
result_limit => 10,
task_name=>'TSK_FELICIA_H_FY24_MHS_LEADERBOARD_FILTER'));
    
--alter task TSK_FELICIA_H_FY24_MHS_LEADERBOARD_FILTER resume; --It was by default suspended  ( run this command Only first time since by default its suspended)
-- execute task TSK_FELICIA_H_FY24_MHS_LEADERBOARD_FILTER;


--TASK
CREATE OR REPLACE TASK TSK_FELICIA_H_FY24_MHS_LEADERBOARD_FILTER
WAREHOUSE = SBX_EA_GENERAL_FR_WH
SCHEDULE = 'USING CRON 0 6 * * 0-6 America/Chicago' -- 6:00 AM on weekdays
TIMESTAMP_INPUT_FORMAT = 'YYYY-MM-DD HH24'
AS

CREATE OR REPLACE TABLE SBX_PSAS_DB.ANALYTICS.FY24_MHS_LEADERBOARD_FILTER AS

WITH

MAX_DATE AS (
SELECT TO_CHAR(MAX(TO_DATE(PERIOD, 'YYYY-DD MON')), 'YYYY_DD MON') AS MAX_PERIOD
FROM DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_NET_SALES_GENERIC
WHERE TO_DATE(PERIOD, 'YYYY-DD MON') < (CURRENT_DATE() + INTERVAL '1 year')
),

-- CREATE OR REPLACE TEMPORARY TABLE 
AVPS_VPS_P1 AS (
SELECT
	DISTINCT(REP_ID), 
	REP_NAME, 
	REP_TITLE, 
	CASE 
		WHEN VPS_ID IS NULL OR VPS_ID = 'VPS NOT FOUND' THEN 0 
		ELSE VPS_ID END AS "VPS_ID",    
	CASE   
		WHEN VPS_NAME = 'VPS NOT FOUND' OR VPS_ID IS NULL THEN 'VPS not found'
		ELSE VPS_NAME END AS "VPS", 

	CASE 
        WHEN REP_ID IN (23425,73265,78168,78298,83104,124438,175432,288827,291653) THEN 208036
        WHEN REP_ID IN (58238,153668,238552,245200,280262,296683,283303,234529,298943,257436) THEN 55902
        WHEN REP_ID IN (67544,122251,182704,258211,263597,305424,305444) THEN 271720 
        WHEN REP_ID IN (6537) THEN 6565
        WHEN VPS_ID IS NULL OR VPS_ID = 'VPS NOT FOUND' THEN 0 
		ELSE AVP_ID END AS "AVP_ID", 
   	CASE 
        WHEN REP_ID IN (23425,73265,78168,78298,83104,124438,175432,288827,291653) THEN 'Thorpe,Ginger'
        WHEN REP_ID IN (58238,153668,238552,245200,280262,296683,283303,234529,298943,257436) THEN 'Ehlert,David A.'
        WHEN REP_ID IN (67544,122251,182704,258211,263597,305424,305444) THEN 'Sangani,Roopa Arora'
        WHEN REP_ID IN (6537) THEN 'Naughton,Christopher John'
        WHEN VPS_ID = 'VPS NOT FOUND' OR VPS_ID IS NULL THEN 'AVP not found'
		WHEN CONTAINS(AVP_NAME, 'Bresnahan') THEN 'Bresnahan,Leigh E.'
    	WHEN CONTAINS(AVP_NAME, 'Ehlert') THEN 'Ehlert,David A.' 
    	WHEN CONTAINS(AVP_NAME, 'McKeon') THEN 'McKeon,Richard J.'
    	ELSE AVP_NAME END AS "AVP", 
    PERIOD 
FROM DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_FILTER_DATA_NO_ACCT
WHERE REP_ROLE_ID LIKE '%MHS%' AND REP_ROLE_ID NOT IN ('USP_MHS_SE')
),


--SELECT TOP 10* FROM DEV_ENT_PL_DATALAKE_DB.VARICENT_BCKP.V_PE_FILTER_DATA_NO_ACCT_FY24;
-- INSERT INTO AVPS_VPS 
-- CREATE OR REPLACE TEMPORARY TABLE 
AVPS_VPS_P2 AS (
SELECT 
	DISTINCT(VPS_ID) AS REP_ID, 
	VPS_NAME AS REP_NAME, 
	VPS_TITLE AS REP_ROLE_ID ,
	VPS_ID, 
	VPS_NAME,
	AVP_ID, 
	CASE 
		--WHEN VPS_ID = 'VPS NOT FOUND' OR VPS_ID IS NULL THEN 'More than one AVP' 
		WHEN CONTAINS(AVP_NAME, 'Bresnahan') THEN 'Bresnahan,Leigh E.'
    	WHEN CONTAINS(AVP_NAME, 'Ehlert') THEN 'Ehlert,David A.' 
    	WHEN CONTAINS(AVP_NAME, 'McKeon') THEN 'McKeon,Richard J.'
    	ELSE AVP_NAME END AS "AVP", 
	PERIOD
FROM DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_FILTER_DATA_NO_ACCT 
WHERE PERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE)
AND VPS_NAME != 'VPS NOT FOUND'
AND REP_ROLE_ID LIKE '%MHS%' AND REP_ROLE_ID NOT IN ('USP_MHS_SE')
),

-- CREATE OR REPLACE TEMPORARY TABLE 
AVPS_VPS AS (
SELECT * FROM AVPS_VPS_P1 
UNION ALL
SELECT * FROM AVPS_VPS_P2
)

SELECT * FROM AVPS_VPS WHERE PERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE)


  