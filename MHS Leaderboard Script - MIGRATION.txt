USE ROLE SBX_EA_GENERAL_FR;
USE SECONDARY ROLES ALL;


--SHOW TASKS LIKE 'TSK_PA_FY24_MHS_LEADERBOARD%'
--DESC TASK TSK_PA_FY24_MHS_LEADERBOARD
--select *  from table(SBX_PSAS_DB.INFORMATION_SCHEMA.task_history(
--scheduled_time_range_start=>dateadd('hour',-24,current_timestamp()),
--result_limit => 10,
--task_name=>'TSK_PA_FY24_MHS_LEADERBOARD'));
    
--alter task TSK_PA_FY24_MHS_LEADERBOARD resume; --It was by default suspended  ( run this command Only first time since by default its suspended)


--TASK
--CREATE OR REPLACE TASK TSK_PA_FY24_MHS_LEADERBOARD
--WAREHOUSE = SBX_EA_GENERAL_FR_WH
--SCHEDULE = 'USING CRON 0 17 * * * America/Los_Angeles'
--TIMESTAMP_INPUT_FORMAT = 'YYYY-MM-DD HH24'
--AS

----baseline data----------------------------
--select distinct FISC_YR_PERIOD FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_GNRC_NET_SLS where FISC_YR='2025'

--PULL MAX SALES DATE FOR ACTUALS
CREATE OR REPLACE TEMPORARY TABLE MAX_DATE AS
SELECT MAX(FISC_YR_PERIOD) AS MAX_PERIOD
FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_GNRC_NET_SLS;
-- WHERE FISC_YR = '2025';

--LOCATION ID
CREATE OR REPLACE TEMPORARY TABLE LOC AS
SELECT  LPAD(CUST_ACCT_ID,6,0) CUST_ACCT_ID, MAX(INA_LOC_ID) AS LOC_ID
FROM    PRD_PSAS_DB.RPT.T_LOCATION_MAP
WHERE   INA_LOC_ID IS NOT NULL 
AND CUST_ACCT_ID != '------' 
AND CUST_ACCT_ID != 'Messag'
AND CUST_ACCT_ID != 'PRD: a'
GROUP BY LPAD(CUST_ACCT_ID,6,0);

-----get the ## in set------------------------

--add product segment/ limit to net sales
CREATE OR REPLACE TEMPORARY TABLE NETSALESTABLE_prep AS
SELECT b.DEA_NUM, vpe.*
	      , CASE WHEN PROD_CTGRY_ID = 'MPB' THEN 'MPB'
	      	WHEN vstx.COPA_DEPT_CD LIKE 'S%' THEN 'Specialty'
	       WHEN vstx.COPA_DEPT_CD LIKE 'R%' THEN  'Biosimlar'
	       WHEN em.RXDA_DSCR = 'OTC'  THEN 'OTC'
	       WHEN em.GNRC_IND = 'Y' THEN 'Generic RX'
	       ELSE 'Brand RX' END PRODUCTSEGMENT
FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_GNRC_NET_SLS vpe
LEFT JOIN PRD_PSAS_DB.RPT.T_IW_EM_ITEM em ON LTRIM(vpe.EM_ITEM_NUM,'0') = LTRIM(em.EM_ITEM_NUM,'0')
LEFT JOIN prd_psas_db.rpt.T_DM_VSTX_ITEM vstx ON LTRIM(vpe.EM_ITEM_NUM,'0') = LTRIM(vstx.EM_ITEM_NUM,'0')
LEFT JOIN "PRD_PSAS_DB"."RPT"."DIM_CUST_ACCT_CURR" b ON LTRIM(vpe.CUST_ACCT_ID,'0') = LTRIM(b.CUST_ACCT_ID,'0') 
WHERE b.CUST_ACCT_ID != 'unk'
AND PROD_GRP_REVENUE_ID = 'NET SALES' 
and (PROD_CTGRY_ID = 'PHARMA' OR PROD_CTGRY_ID ='MPB') 
and PROD_GRP ='NET SALES'
AND CONTAINS(BUS_ROLE_ID, 'MHS')
AND VPE.FISC_YR = '2025'; 

--aggregate from line lever to productsegment level
CREATE OR REPLACE TEMPORARY TABLE NETSALESTABLE AS
SELECT  REP_EMPLY_ID AS PAYEEID,
		REP_NAME AS PAYEENAME,
		BUS_ROLE_ID AS ROLE,
        BUS_ROLE_NAME AS ROLENAME,
        CUST_ACCT_ID AS ACCOUNTID,
        CUST_ACCT_NAME AS ACCOUNTNAME,
        ACCT_ST AS ACCOUNTSTATE,
        FISC_YR_PERIOD AS PERIOD, 
        DEA_NUM,
        SUM(SLS_AMT) AS NET_SALES_ACTUAL, 
        PRODUCTSEGMENT,
	    CASE WHEN PRODUCTSEGMENT = 'MPB' THEN SUM(SLS_AMT) 
	    	 WHEN PRODUCTSEGMENT = 'Specialty' THEN SUM(SLS_AMT)
	         WHEN PRODUCTSEGMENT = 'Biosimlar' THEN SUM(SLS_AMT)
	         WHEN PRODUCTSEGMENT =  'OTC'  THEN SUM(SLS_AMT)
	         WHEN PRODUCTSEGMENT = 'Generic RX' THEN SUM(SLS_AMT)  
	         WHEN PRODUCTSEGMENT = 'Brand RX' THEN SUM(SLS_AMT) END SALES, 
	   to_varchar(EXTRACT_DT, 'yyyy-MM') AS loaded
FROM netsalestable_prep
WHERE FISC_YR_PERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE)
GROUP BY 
		REP_EMPLY_ID,
		REP_NAME,
        BUS_ROLE_ID,
        BUS_ROLE_NAME,
        CUST_ACCT_ID,
        CUST_ACCT_NAME,
        ACCT_ST,
        FISC_YR_PERIOD, 
        PRODUCTSEGMENT,
        DEA_NUM,
        EXTRACT_DT;

--account goals 
CREATE OR REPLACE TEMPORARY TABLE account_targets AS 
--select distinct FISC_YR_MTH FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_ACCT_TRGTS where FISC_YR_PERIOD like '2025%'
SELECT 
	a.REP_EMPLY_ID AS PAYEEID, 
	a.REP_NAME AS PAYEENAME, 
	a.CUST_ACCT_ID AS ACCOUNTID, 
	a.BUS_ROLE_ID AS COMPPLAN, 
	a.BUS_ROLE_NAME AS COMPPLANNAME,
	FISC_YR_PERIOD AS MONTH, 
	SUM(a.GOAL_VAL) AS TARGETGOAL,
    b.DEA_NUM
FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_ACCT_TRGTS a 
JOIN "PRD_PSAS_DB"."RPT"."DIM_CUST_ACCT_CURR" b
ON LTRIM(a.CUST_ACCT_ID,'0') = LTRIM(b.CUST_ACCT_ID,'0')
WHERE b.CUST_ACCT_ID != 'unk'
AND MTRC_NAME = 'NET SALES'
AND GOAL_TYPE_ID = 'ACCOUNT GOAL' 
AND FISC_YR_MTH LIKE '2025%'
GROUP BY  
	a.REP_EMPLY_ID, 
	a.REP_NAME,
	a.CUST_ACCT_ID,
	a.FISC_YR_PERIOD, 
	a.BUS_ROLE_ID, 
	a.BUS_ROLE_NAME,
    b.DEA_NUM;
 
----get goal info
CREATE OR REPLACE TEMPORARY TABLE account_goals AS 
--SELECT distinct FISC_YR_MTH  FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_ACCT_GOALS where FISC_YR_MTH like '2025%'
SELECT 
	a.CUST_ACCT_ID AS ACCOUNTID, 
    b.DEA_NUM,
	IFNULL(SUM(CASE WHEN a.PROD_GRP = 'PHARMA' THEN GOAL_VAL END), 0) AS Pharma_Goal, 
	IFNULL(SUM(CASE WHEN a.PROD_GRP = 'MPB' THEN GOAL_VAL END), 0 ) AS MPB_Goal,
	IFNULL(Pharma_Goal + MPB_Goal, 0) AS totalgoal,
	CASE 
		WHEN a.CAL_MTH = 'APRIL 2024' THEN '2025-01 APR'
		WHEN a.CAL_MTH = 'MAY 2024' THEN '2025-02 MAY'
		WHEN a.CAL_MTH = 'JUNE 2024' THEN '2025-03 JUN'
		WHEN a.CAL_MTH = 'JULY 2024' THEN '2025-04 JUL'
		WHEN a.CAL_MTH = 'AUGUST 2024' THEN '2025-05 AUG'
		WHEN a.CAL_MTH = 'SEPTEMBER 2024' THEN '2025-06 SEP'
		WHEN a.CAL_MTH = 'OCTOBER 2024' THEN '2025-07 OCT'
		WHEN a.CAL_MTH = 'NOVEMBER 2024' THEN '2025-08 NOV' 
		WHEN a.CAL_MTH = 'DECEMBER 2024' THEN '2025-09 DEC'
		WHEN a.CAL_MTH = 'JANUARY 2025' THEN '2025-10 JAN'
		WHEN a.CAL_MTH = 'FEBRUARY 2025' THEN '2025-11 FEB'
		WHEN a.CAL_MTH = 'MARCH 2025' THEN '2025-12 MAR'
	END PERIOD -- CREATE PERIOD MAPPING TABLE
FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_ACCT_GOALS a
JOIN "PRD_PSAS_DB"."RPT"."DIM_CUST_ACCT_CURR" b ON LTRIM(a.CUST_ACCT_ID,'0') = LTRIM(b.CUST_ACCT_ID,'0') WHERE b.CUST_ACCT_ID != 'unk'
AND MTRC_NAME = 'NET SALES'  
AND MKT_SGMNT = 'MHS'
AND FISC_YR_MTH LIKE '2025%'
GROUP BY A.CUST_ACCT_ID, PERIOD, DEA_NUM; 

--combined
CREATE OR REPLACE TEMPORARY TABLE COMBINED_GOALS AS 
--SELECT TOP 10* FROM PRD_PSAS_ANALYTICS_DB.GOLD_MASTER.VW_CUST_MSTR
SELECT 
	a.payeeid, 
	a.payeename, 
	a.compplan AS ROLE, 
	a.COMPPLANNAME AS ROLENAME,
	a.accountid, 
    a.DEA_NUM,
	n.CUST_ACCT_NAM AS accountname, 
	n.ACCT_DLVRY_ST_ABRV AS accountstate,
	b.period,
	totalgoal, 
	pharma_goal, 
	MPB_Goal, 
	targetgoal
FROM account_targets a
LEFT JOIN account_goals b ON LTRIM(a.accountid,'0') = LTRIM(b.accountid,'0') AND a.MONTH = b.period
LEFT JOIN PRD_PSAS_ANALYTICS_DB.GOLD_MASTER.VW_CUST_MSTR n ON a.accountid = n.CUST_ACCT_ID 
WHERE n.CURRENT_RECORD_IND='Y'
AND PERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE);

--PULL ACTUALS
CREATE OR REPLACE TEMPORARY TABLE PREP_PREP AS
SELECT  
		PAYEEID,
        PAYEENAME,
		ROLE,
        ROLENAME,
        ACCOUNTID,
        DEA_NUM,
        ACCOUNTNAME,
        ACCOUNTSTATE,
        PERIOD,
        PRODUCTSEGMENT,
        NET_SALES_ACTUAL,
        SALES,
        0 AS pharma_goal, 
	    0 AS mpb_goal, 
	    0 AS totalgoal, 
	    0 AS targetgoal
FROM    NETSALESTABLE
UNION 
SELECT  
		PAYEEID,
        PAYEENAME,
        ROLE,
        ROLENAME,
        ACCOUNTID,
        DEA_NUM,
        ACCOUNTNAME,
        ACCOUNTSTATE,
        PERIOD,
        'GOALS' AS PRODUCTSEGMENT,
        0 AS NET_SALES_ACTUAL,
        0 AS SALES, 
	    IFNULL(pharma_goal, 0) AS pharma_goal, 
	    IFNULL(mpb_goal, 0) AS mpb_goal, 
	    IFNULL(totalgoal, 0) AS totalgoal, 
	    IFNULL(targetgoal, 0) AS targetgoal
FROM combined_goals; 

--PULL ACTUALS
CREATE OR REPLACE TEMPORARY TABLE PREP AS
SELECT  
	PAYEEID, 
	PAYEENAME, 
	CASE WHEN CONTAINS(ROLE, 'EAE') THEN 'EAE' 
    WHEN CONTAINS(ROLE, 'DEA') THEN 'DEA' 
    WHEN CONTAINS(ROLE, 'SM') THEN 'VPS'
    WHEN CONTAINS(ROLE, 'FSL') THEN 'FSL' ELSE 'NA' END AS ROLE, 
	ROLENAME, 
	ACCOUNTID, 
    DEA_NUM,
	ACCOUNTNAME, 
	ACCOUNTSTATE, 
	PERIOD, 
	PRODUCTSEGMENT, 
	SUM(NET_SALES_ACTUAL) AS NET_SALES_ACTUAL, 
	SUM(SALES) AS SALES, 
	SUM(PHARMA_GOAL) AS PHARMA_GOAL , 
	SUM(MPB_GOAL) AS MPB_GOAL, 
	SUM(TOTALGOAL) AS TOTALGOAL, 
	SUM(TARGETGOAL) AS TARGETGOAL
FROM PREP_PREP
GROUP BY 
	PRODUCTSEGMENT, 
	PAYEEID, 
	PAYEENAME, 
	ROLE, 
	ROLENAME, 
	ACCOUNTID, 
    DEA_NUM,
	ACCOUNTNAME, 
	ACCOUNTSTATE, 
	PERIOD;

--HIERARCHY
CREATE OR REPLACE TEMPORARY TABLE AVPS_VPS AS  
SELECT DISTINCT 
    REP_EMPLY_ID AS REP_ID, 
	REP_NAME, 
	REP_TITLE, 
	CASE WHEN VPS_EMPLY_ID IS NULL OR VPS_EMPLY_ID = 'VPS NOT FOUND' THEN 0 
		ELSE VPS_EMPLY_ID END AS "VPS_ID",    
	CASE WHEN VPS_NAME = 'VPS NOT FOUND' OR VPS_EMPLY_ID IS NULL THEN 'VPS not found'
		ELSE VPS_NAME END AS "VPS", 
	CASE WHEN LTRIM(REP_EMPLY_ID,'0') IN ('23425','73265','78168','78298','83104','124438','175432','288827','291653') THEN '208036'
        WHEN LTRIM(REP_EMPLY_ID,'0') IN ('58238','153668','238552','245200','280262','296683','283303','234529','298943','257436') THEN '55902'
        WHEN LTRIM(REP_EMPLY_ID,'0') IN ('67544','122251','182704','258211','263597','305424','305444') THEN '271720' 
        WHEN LTRIM(REP_EMPLY_ID,'0') IN ('6537') THEN '6565'
        WHEN VPS_EMPLY_ID IS NULL OR VPS_EMPLY_ID = 'VPS NOT FOUND' THEN '0' 
		ELSE AVP_EMPLY_ID END AS "AVP_ID", 
   	CASE WHEN LTRIM(REP_EMPLY_ID,'0') IN ('23425','73265','78168','78298','83104','124438','175432','288827','291653') THEN 'Thorpe, Ginger'
        WHEN LTRIM(REP_EMPLY_ID,'0') IN ('58238','153668','238552','245200','280262','296683','283303','234529','298943','257436') THEN 'Ehlert, David A.'
        WHEN LTRIM(REP_EMPLY_ID,'0') IN ('67544','122251','182704','258211','263597','305424','305444') THEN 'Sangani, Roopa Arora' 
        WHEN LTRIM(REP_EMPLY_ID,'0') IN ('6537') THEN 'Naughton, Christopher John'
        WHEN VPS_EMPLY_ID = 'VPS NOT FOUND' OR VPS_EMPLY_ID IS NULL THEN 'AVP not found'
		WHEN CONTAINS(AVP_NAME, 'Bresnahan') THEN 'Bresnahan, Leigh E.'
    	WHEN CONTAINS(AVP_NAME, 'Ehlert') THEN 'Ehlert, David A.' 
    	WHEN CONTAINS(AVP_NAME, 'McKeon') THEN 'McKeon, Richard J.'
    	ELSE AVP_NAME END AS "AVP", --VALIDATED
    FISC_YR_PERIOD AS PERIOD 
FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_HIERARCHY
WHERE BUS_ROLE_ID LIKE '%MHS%' AND BUS_ROLE_ID NOT IN ('USP_MHS_SE')
AND FISC_YR='2025';

--SELECT TOP 10* FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_HIERARCHY WHERE ltrim(REP_EMPLY_ID,'0') = '78168'

INSERT INTO AVPS_VPS  
SELECT DISTINCT 
    VPS_EMPLY_ID AS REP_ID, 
	VPS_NAME AS REP_NAME, 
	VPS_TITLE AS REP_ROLE_ID ,
	VPS_EMPLY_ID AS VPS_ID, 
	VPS_NAME,
	AVP_EMPLY_ID AS AVP_ID, 
	CASE 
		--WHEN VPS_ID = 'VPS NOT FOUND' OR VPS_ID IS NULL THEN 'More than one AVP' 
		WHEN CONTAINS(AVP_NAME, 'Bresnahan') THEN 'Bresnahan, Leigh E.'
    	WHEN CONTAINS(AVP_NAME, 'Ehlert') THEN 'Ehlert, David A.' 
    	WHEN CONTAINS(AVP_NAME, 'McKeon') THEN 'McKeon, Richard J.'
    	ELSE AVP_NAME END AS "AVP", 
	FISC_YR_PERIOD AS PERIOD
FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_HIERARCHY
WHERE FISC_YR_PERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE)
AND VPS_NAME != 'VPS NOT FOUND'
AND BUS_ROLE_ID LIKE '%MHS%' AND BUS_ROLE_ID NOT IN ('USP_MHS_SE')
AND FISC_YR='2025';

--terr 
CREATE OR REPLACE TEMPORARY TABLE terr AS
SELECT 
	VPE.CUST_ACCT_ID as ACCOUNTID,
    b.DEA_NUM,
    VPE.SLS_TERR_ID AS TERRITORY_ID,
    VPE.HOME_DC_ID AS HOME_DC_ID,
    VPE.CUST_CHN_ID AS CHAIN_ID,
    VPE.ACCT_DLVRY_ST_ABRV AS ACCOUNT_STATE  
FROM PRD_PSAS_ANALYTICS_DB.GOLD_MASTER.VW_CUST_MSTR vpe   
JOIN "PRD_PSAS_DB"."RPT"."DIM_CUST_ACCT_CURR" b ON LTRIM(vpe.CUST_ACCT_ID,'0') = LTRIM(b.CUST_ACCT_ID,'0') WHERE b.CUST_ACCT_ID != 'unk'
AND vpe.CURRENT_RECORD_IND = 'Y';

--PRESIDENTS CLUB 
CREATE OR REPLACE TEMPORARY TABLE HIERARCHY_PREP AS
--SELECT TOP 10* FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_ACCT_TRGTS WHERE FISC_YR_PERIOD LIKE '2025%'
SELECT DISTINCT A.REP_EMPLY_ID AS PAYEE_ID,
                A.BUS_ROLE_ID AS COMP_PLAN_ID,
                A.EFFECTIVE_DT AS EFFECTIVE_START,
                CASE WHEN A.EFFECTIVE_DT < '2024-04-01' AND A.EFFECTIVE_DT >= '2023-04-01' THEN 'Rising Star Eligible' 
                     WHEN A.EFFECTIVE_DT <= '2024-04-01' THEN 'President Club Eligible'
                     ELSE '<12mo by end of FY' END AS Award_Eligible
FROM            PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_PLAN_ASSIGNMENT A
LEFT JOIN       PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_HIERARCHY B
ON              LTRIM(A.REP_EMPLY_ID,'0') = LTRIM(B.REP_EMPLY_ID,'0')
AND             B.FISC_YR_PERIOD < '2026 01 APR'
LEFT JOIN       PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_ACCT_TRGTS C
ON              LTRIM(A.REP_EMPLY_ID,'0') = LTRIM(C.REP_EMPLY_ID,'0')
WHERE           EXPIRATION_DT = '9998-12-31'
AND             CONTAINS(A.BUS_ROLE_ID,'USP_MHS')
GROUP BY        A.REP_EMPLY_ID,
                A.BUS_ROLE_ID,
                A.EFFECTIVE_DT,
                CASE WHEN A.EFFECTIVE_DT < '2024-04-01' AND A.EFFECTIVE_DT >= '2023-04-01' THEN 'Rising Star Eligible' 
                     WHEN A.EFFECTIVE_DT <= '2024-04-01' THEN 'President Club Eligible'
                     ELSE '<12mo by end of FY' END;

CREATE OR REPLACE TEMPORARY TABLE HIERARCHY AS
SELECT DISTINCT PAYEE_ID,
                Award_Eligible
FROM HIERARCHY_PREP
GROUP BY 1,2;

--INACTIVE REP
CREATE OR REPLACE TEMPORARY TABLE REP_DURATION AS
SELECT DISTINCT REP_EMPLY_ID AS PAYEEID,
                BUS_ROLE_ID AS COMPPLANID,
                EFFECTIVE_DT AS EFFECTIVE_START,
                EXPIRATION_DT AS EFFECTIVE_END,
                RANK() OVER (PARTITION BY REP_EMPLY_ID ORDER BY EXPIRATION_DT DESC) AS RANK
FROM            PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_PLAN_ASSIGNMENT 
WHERE           CONTAINS(BUS_ROLE_ID,'USP_MHS')
GROUP BY        REP_EMPLY_ID,
                BUS_ROLE_ID,
                EFFECTIVE_DT,
                EXPIRATION_DT;

CREATE OR REPLACE TEMPORARY TABLE INACTIVE AS
SELECT *, 'Y' AS INACTIVE
FROM            REP_DURATION
WHERE           RANK=1 
AND             EFFECTIVE_END<>'9998-12-31';

--SELECT * FROM PREP WHERE PAYEENAME = 'Millrany, Benjamin' 

--add final details 
CREATE OR REPLACE TEMPORARY TABLE FINAL_FLUFF AS
SELECT
	PAYEEID, 
	PAYEENAME, 
	CASE WHEN PAYEENAME = 'Millrany, Benjamin' THEN 'DEA'
    ELSE ROLE END AS ROLE,
    CASE WHEN PAYEENAME = 'Millrany, Benjamin' THEN 'MHS Sales Enterprise Account Director C Class Commission Plan'
    ELSE ROLENAME END AS ROLENAME,
	a.ACCOUNTID, 
    a.DEA_NUM,
	a.ACCOUNTNAME, 
	ACCOUNTSTATE, 
	PERIOD, 
	PRODUCTSEGMENT, 
	NET_SALES_ACTUAL, 
	SALES, 
	PHARMA_GOAL, 
	MPB_GOAL, 
	TOTALGOAL, 
	TARGETGOAL,
	CASE 
		WHEN PERIOD = '2025-01 APR' THEN '2025, QUARTER 1'
	    WHEN PERIOD = '2025-02 MAY' THEN '2025, QUARTER 1'
		WHEN PERIOD = '2025-03 JUN' THEN '2025, QUARTER 1'
		WHEN PERIOD = '2025-04 JUL' THEN '2025, QUARTER 2'
		WHEN PERIOD = '2025-05 AUG' THEN '2025, QUARTER 2'
		WHEN PERIOD = '2025-06 SEP' THEN '2025, QUARTER 2'
		WHEN PERIOD = '2025-07 OCT' THEN '2025, QUARTER 3'
		WHEN PERIOD = '2025-08 NOV' THEN '2025, QUARTER 3' 
		WHEN PERIOD = '2025-09 DEC' THEN '2025, QUARTER 3'
		WHEN PERIOD = '2025-10 JAN' THEN '2025, QUARTER 4'
		WHEN PERIOD = '2025-11 FEB' THEN '2025, QUARTER 4'
		WHEN PERIOD = '2025-12 MAR' THEN '2025, QUARTER 4'
		END QUARTER, -- CREATE QUARTER MAPPING TABLE
	    TERRITORY_ID, 
        HOME_DC_ID, 
        CHAIN_ID,
        ACCOUNT_STATE,
        LOC.LOC_ID  
FROM PREP a
LEFT JOIN terr ON a.accountid = terr.accountid
LEFT JOIN  LOC ON  a.accountid= LOC.CUST_ACCT_ID
WHERE ROLE != 'NA';

--NET SALES RANK
CREATE OR REPLACE TEMPORARY TABLE NS_RANK AS
SELECT      PAYEEID, 
            PayeeName,
            ROLE,
            ROLENAME,
            SUM(NET_SALES_ACTUAL) AS NET_SALES_ACTUAL,
            SUM(TOTALGOAL) AS NET_SALES_GOAL,
            SUM(ZEROIFNULL(NET_SALES_ACTUAL))/ SUM(NULLIFZERO(TOTALGOAL)) AS ATT_PERC,
            CASE WHEN SUM(TOTALGOAL) = 0 THEN NULL
                ELSE RANK() OVER (PARTITION BY ROLE ORDER BY SUM(ZEROIFNULL(NET_SALES_ACTUAL)) / NULLIF(SUM(NULLIFZERO(TOTALGOAL)), 0) DESC NULLS LAST)
            END AS NET_SALES_RANK
FROM        FINAL_FLUFF
WHERE       PERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE) 
GROUP BY    
            ROLE,
            PAYEEID,
            PAYEENAME,
            ROLENAME; 
          
--JUST THE ROLES 
CREATE OR REPLACE TEMPORARY TABLE JUST_ROLES AS 
SELECT DISTINCT(PAYEEID), 
	PAYEENAME,
	ROLE
FROM FINAL_FLUFF; 

--------------------vbcogs----------------------------------- 

CREATE OR REPLACE TEMPORARY TABLE VBCOGS AS
--SELECT TOP 10* FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_PPS WHERE FISC_YR_QTR LIKE '2025%'
SELECT  
	a.REP_EMPLY_ID AS PAYEEID, 
	b.ROLE, 
	a.FISC_YR_QTR AS quarter, 
	a.AMT AS amount,
		CASE WHEN AMT >= 5000 AND ROLE IN ('EAE','DEA', 'FSL') THEN '115%'
		WHEN  AMT >= 10000 AND ROLE = 'VPS' THEN '115%'
		WHEN  AMT = 0 THEN '< 100%'
		ELSE '100%-114.99%' END AS VBCOGS_Attainment 
FROM JUST_ROLES b
LEFT JOIN PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_PPS a ON b.PAYEEID = a.REP_EMPLY_ID 
WHERE A.PROD_TYPE = 'RIGHT HAND LEDGER'
AND CONTAINS(a.FISC_YR_QTR, '2025');

CREATE OR REPLACE TEMPORARY TABLE VBCOGS_FOR_RANK AS 
SELECT a.REP_EMPLY_ID AS payeeid, 
	ROLE, 
	sum(AMT) AS VBCOG
FROM JUST_ROLES b
LEFT JOIN PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_PPS a ON a.REP_EMPLY_ID = b.PAYEEID 
WHERE A.PROD_TYPE = 'RIGHT HAND LEDGER'
AND CONTAINS(a.FISC_YR_QTR, '2025')
GROUP BY  
	a.REP_EMPLY_ID, 
	ROLE;
	
--VBCOGS RANK
CREATE OR REPLACE TEMPORARY TABLE VBCOGS_RANK AS
SELECT      PAYEEID, 
            ROLE,
            (ZEROIFNULL(VBCOG)) AS TOTAL,
            DENSE_RANK() OVER (PARTITION BY ROLE ORDER BY (ZEROIFNULL(VBCOG)) DESC) AS VBCOGS_RANK
FROM VBCOGS_FOR_RANK
GROUP BY 	PAYEEID, 
			ROLE, 
			VBCOG;
		
--------------------VAS-----------------------------------  
CREATE OR REPLACE TEMPORARY TABLE VAS AS
--SELECT TOP 10* FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_VAL_ADDED_SLTNS WHERE FISC_YR_QTR LIKE '2025%'
SELECT 
	a.PAYEEID,
	ROLE,
	CUST_ACCT_ID AS ACCOUNTID, 
	INITCAP(PROD_TYPE) PRODUCTTYPE, 
	CASE WHEN PROD_TYPE = 'HEALTH MART ATLAS' THEN 'Category 3'
	 WHEN PROD_TYPE = 'PROVIDERPAY' THEN 'Category 3'
	 WHEN PROD_TYPE = 'RXO UTILIZATION ANALYTICS' THEN 'Category 1'
	 WHEN PROD_TYPE = 'RXO EPISODIC ADVISORY ENGAGEMENTS' THEN 'Category 2'
	 WHEN PROD_TYPE = 'RELAYHEALTH' THEN 'Category 3'
	 WHEN PROD_TYPE = 'PROVIDER SOLUTIONS (MSH)' THEN 'Category 1'
	 WHEN PROD_TYPE = 'RXO RECOVERY SERVICES - PAP RECOVERY NAVIGATOR' THEN 'Category 1'
	 WHEN PROD_TYPE = 'MACRO HELIX' THEN 'Category 1'
	 WHEN PROD_TYPE = 'RXO RECOVERY SERVICES - PAP SERVICES' THEN 'Category 1'
	 WHEN PROD_TYPE = 'SUPPLYLOGIX' THEN 'Category 2'
	 WHEN PROD_TYPE = 'MCKESSON PLASMA & BIOLOGICS (MPB)' THEN 'Category 2'
	 WHEN PROD_TYPE = 'RXO RECOVERY SERVICES - REVENUE SERVICES' THEN 'Category 1'
	 WHEN PROD_TYPE = 'MCKESSON PHARMACY SYSTEMS (MPS)' THEN 'Category 2'
	 WHEN PROD_TYPE = 'COMPASS' THEN 'Category 1'
	 WHEN PROD_TYPE = 'RXO RECOVERY SERVICES (PAP & REVENUE SERVICES)' THEN 'Category 1'
	 WHEN PROD_TYPE = 'MRXTS - COVER MY MEDS' THEN 'Category 2'
	 WHEN PROD_TYPE= 'MRXTS - MACRO HELIX' THEN 'Category 1'
	 WHEN PROD_TYPE = 'MRXTS - MCKESSON PHARMACY SYSTEMS (MPS)' THEN 'Category 2'
	 WHEN PROD_TYPE = 'MRXTS - RELAYHEALTH' THEN 'Category 3'
	--CASE WHEN PRODUCTYPE = 'RXO SPEND ANALYTICS' THEN 
	 WHEN PROD_TYPE = 'MRXTS – SUPPLYLOGIX' THEN 'Category 2'
	 WHEN PROD_TYPE = 'COVER MY MEDS' THEN 'Category 2'
	 WHEN PROD_TYPE = 'MCKESSON MEDICAL SURGICAL(MMS)' THEN 'Category 1'
	END AS CATEGORY, 
	FISC_YR_QTR AS FISCALQUARTER,
    FISC_YR_QTR AS QUARTER, -- USED IN LEADERBOARD
		DEAL_CRDT AS DEALCREDIT, 
	CASE WHEN CATEGORY = 'Category 1' THEN 60  
		WHEN CATEGORY = 'Category 2' THEN 30 
		WHEN CATEGORY = 'Category 3' THEN 10  
		END AS CATEGORY_POINTS, 
	DEAL_CRDT * CATEGORY_POINTS AS VAS_POINTS
FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_VAL_ADDED_SLTNS b
INNER JOIN just_roles a ON b.REP_EMPLY_ID = a.payeeid
WHERE CONTAINS(FISC_YR_QTR, '2025'); 

---vas rank 
CREATE OR REPLACE TEMPORARY TABLE VAS_RANK AS
SELECT      PAYEEID, 
            ROLE,
            SUM(VAS_POINTS) AS VAS_TOTAL,
            DENSE_RANK() OVER (PARTITION BY ROLE ORDER BY SUM(ZEROIFNULL(VAS_POINTS)) DESC) AS VAS_RANK
FROM VAS
GROUP BY 	PAYEEID, 
            ROLE;
             
 ---------------------Renewals  
-- SELECT * FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_RNWLS_AND_NB WHERE OPPRTNTY_ID='006HQ00001T4KYBIAN'

--renewals 
CREATE OR REPLACE TEMPORARY TABLE RENEWALS AS  
--SELECT TOP 10* FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_RNWLS_AND_NB
SELECT 
	b.OPPRTNTY_ID AS OPPORTUNITY_ID, 
	b.OPPRTNTY_NAME AS OPPORTUNITY_NAME,
	b.REP_EMPLY_ID AS PAIDPAYEE, 
	b.REP_NAME AS PAIDPAYEENAME,
	b.REP_TYPE AS PAYEETYPE, 
     CASE WHEN CLOSE_DT>='04/01/2024' AND CLOSE_DT<='04/30/2024' THEN '2025-01 APR'
          WHEN CLOSE_DT>='05/01/2024' AND CLOSE_DT<='05/31/2024' THEN '2025-02 MAY'
          WHEN CLOSE_DT>='06/01/2024' AND CLOSE_DT<='06/30/2024' THEN '2025-03 JUN'
          WHEN CLOSE_DT>='07/01/2024' AND CLOSE_DT<='07/31/2024' THEN '2025-04 JUL'
          WHEN CLOSE_DT>='08/01/2024' AND CLOSE_DT<='08/31/2024' THEN '2025-05 AUG'
          WHEN CLOSE_DT>='09/01/2024' AND CLOSE_DT<='09/30/2024' THEN '2025-06 SEP'
          WHEN CLOSE_DT>='10/01/2024' AND CLOSE_DT<='10/31/2024' THEN '2025-07 OCT'
          WHEN CLOSE_DT>='11/01/2024' AND CLOSE_DT<='11/30/2024' THEN '2025-08 NOV'
          WHEN CLOSE_DT>='12/01/2024' AND CLOSE_DT<='12/31/2024' THEN '2025-09 DEC'
          WHEN CLOSE_DT>='01/01/2025' AND CLOSE_DT<='01/31/2025' THEN '2025-10 JAN'
          WHEN CLOSE_DT>='02/01/2025' AND CLOSE_DT<='02/29/2025' THEN '2025-11 FEB'
          ELSE '2025-12 MAR'
          END AS CLOSE_PERIOD, --VALIDATED
	b.REVENUE_AMT AS revenue, 
	b.NET_TERM_GAIN AS nettermgain, 
	b.EBIT_PRCNT / 100 AS ebitpercent, 
	b.CURR_EBIT_PRCNT / 100 AS currentebitpercent, 
	b.DSO, 
    --BASE PAYOUT
    CASE WHEN b.NET_TERM_GAIN<24 THEN 100
         WHEN b.NET_TERM_GAIN>=24 AND b.NET_TERM_GAIN<36 THEN 86
         WHEN b.NET_TERM_GAIN>=36 AND b.NET_TERM_GAIN<48 THEN 85
         WHEN b.NET_TERM_GAIN>=48 AND b.NET_TERM_GAIN<60 THEN 84
         WHEN b.NET_TERM_GAIN>=60 THEN 83
         ELSE 0 END AS TERM_THRESHOLD,
    currentebitpercent*TERM_THRESHOLD/100 AS EBIT_THRESHOLD,
    REVENUE*EBIT_THRESHOLD AS EBIT_DOLLARS,
    REVENUE*ebitpercent AS EBIT,
    CASE WHEN EBITPERCENT>=EBIT_THRESHOLD THEN .00625
         ELSE .00312 END AS BASE_PAYOUT_RATE,
    EBIT*BASE_PAYOUT_RATE AS BASE_PAYOUT,
    CASE WHEN b.NET_TERM_GAIN>=24 AND b.NET_TERM_GAIN<36 THEN -.33
         WHEN b.NET_TERM_GAIN>=36 AND b.NET_TERM_GAIN<48 THEN 0
         WHEN b.NET_TERM_GAIN>=48 AND b.NET_TERM_GAIN<60 THEN .5
         WHEN b.NET_TERM_GAIN>=60 THEN 1
         ELSE 0 END AS DEAL_MODIFIER,
    (BASE_PAYOUT+(BASE_PAYOUT*DEAL_MODIFIER)) AS MODIFIED_PAYOUT,
    --ACCELERATOR PAYOUT
    CASE WHEN EBITPERCENT<EBIT_THRESHOLD THEN 0
    ELSE .007 END AS ACCELERATOR_1,
    CASE WHEN EBITPERCENT>=currentebitpercent THEN .14
    ELSE 0 END AS ACCELERATOR_2,
    CASE WHEN ACCELERATOR_2>ACCELERATOR_1 THEN ACCELERATOR_2
    ELSE ACCELERATOR_1 END AS ACCELERATOR_APPLIED,
    CASE WHEN EBIT>EBIT_DOLLARS THEN (EBIT-EBIT_DOLLARS)
    ELSE 0 END AS EBIT_OVER_THRESHOLD,
    ACCELERATOR_APPLIED*EBIT_OVER_THRESHOLD AS ACCELERATOR_PAYOUT,
    --DSO MODIFIER
    CASE WHEN DSO>=17.5001 THEN -.005
    ELSE 0 END AS DSO_MODIFIER,
    DSO_MODIFIER*(ACCELERATOR_PAYOUT+MODIFIED_PAYOUT) AS DSO_REDUCTION,
    --FINAL PAYOUT
    (MODIFIED_PAYOUT+ACCELERATOR_PAYOUT+DSO_REDUCTION) AS ESTIMATED_PAYOUT
FROM JUST_ROLES a          
INNER JOIN PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_RNWLS_AND_NB b
WHERE COMPONENT_ID = 'CR ADVANCE PART I'
AND REP_TYPE = 'REP' 
AND ACCT_TYPE = 'HEALTH SYSTEMS'
AND SIGNING_TYPE = 'RENEWAL'
-- AND REPORTPERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE)
AND (CONTAINS(CLOSE_DT, '2024') OR CONTAINS(CLOSE_DT, '2025'))
AND CLOSE_DT>='04/01/2024'
GROUP BY 
	b.OPPRTNTY_ID, 
	b.OPPRTNTY_NAME,
	b.REP_EMPLY_ID, 
	b.REP_NAME,
	b.REP_TYPE, 
    CLOSE_PERIOD,
	revenue, 
	nettermgain, 
	ebitpercent, 
	currentebitpercent, 
	dso;

--renewal rank prep 
CREATE OR REPLACE TEMPORARY TABLE RENEWAL_RANK_PREP AS
SELECT a.*, b.role 
FROM RENEWALS a
INNER JOIN FINAL_FLUFF b ON a.PAIDPAYEENAME = b.PAYEENAME AND a.CLOSE_PERIOD = b.PERIOD 
GROUP BY a.OPPORTUNITY_ID,
	a.OPPORTUNITY_NAME,
	a.PAIDPAYEE, 
	a.PAIDPAYEENAME,
	a.PAYEETYPE, 
	a.CLOSE_PERIOD,
	a.revenue, 
	a.nettermgain, 
	a.ebitpercent, 
	a.currentebitpercent, 
	a.dso,
    A.TERM_THRESHOLD,
    A.EBIT_THRESHOLD,
    A.EBIT_DOLLARS,
    A.EBIT,
    A.BASE_PAYOUT_RATE,
    A.BASE_PAYOUT,
    A.DEAL_MODIFIER,
    A.MODIFIED_PAYOUT,
    A.ACCELERATOR_1,
    A.ACCELERATOR_2,
    A.ACCELERATOR_APPLIED,
    A.EBIT_OVER_THRESHOLD,
    A.ACCELERATOR_PAYOUT,
    A.DSO_MODIFIER,
    A.DSO_REDUCTION,
    A.ESTIMATED_PAYOUT,
    b.role; 

--renewal rank 
CREATE OR REPLACE TEMPORARY TABLE RENEWAL_RANK AS
SELECT      PAIDPAYEE, 
            PAIDPAYEENAME,
            ROLE,
            SUM(ESTIMATED_PAYOUT) AS RENEWAL_TOTAL,
            DENSE_RANK() OVER (PARTITION BY ROLE ORDER BY SUM(ZEROIFNULL(ESTIMATED_PAYOUT)) DESC) AS REN_RANK
FROM RENEWAL_RANK_PREP
GROUP BY 	PAIDPAYEE, 
            PAIDPAYEENAME,
            ROLE;

-- select CUST_BUS_TYP_CD,CUST_BUS_TYP_DSCR from PRD_PSAS_ANALYTICS_DB.GOLD_MASTER.VW_CUST_MSTR WHERE CURRENT_RECORD_IND='Y' GROUP BY 1,2
            
--CUSTOMER TYPE
CREATE OR REPLACE TEMPORARY TABLE CUSTOMER_TYPE AS
SELECT DISTINCT CUST_ACCT_ID AS accountid,
CUST_BUS_TYP_CD AS customertypecode,
CASE WHEN CUST_BUS_TYP_CD='01' THEN 'RETAIL DRUG STORE'
     WHEN CUST_BUS_TYP_CD='02' THEN 'DRUG CHAIN' --CHECK WITH SHALINI
     WHEN CUST_BUS_TYP_CD='07' THEN 'HOSPITAL (INDIVIDUAL)'
     WHEN CUST_BUS_TYP_CD='08' THEN 'HOSPITAL CHAIN'
     WHEN CUST_BUS_TYP_CD='09' THEN 'HOSPITAL GROUP'
     WHEN CUST_BUS_TYP_CD='10' THEN 'PHYSICIAN/DENTIST'
     WHEN CUST_BUS_TYP_CD='14' THEN 'NON-ORDER CUSTOMER'
     WHEN CUST_BUS_TYP_CD='16' THEN 'HMO PHARMACY (NON-HOSP)'
     WHEN CUST_BUS_TYP_CD='19' THEN 'INTERNAL SALES'
     WHEN CUST_BUS_TYP_CD='20' THEN 'MCKESSON DC'
     WHEN CUST_BUS_TYP_CD='26' THEN 'MAIL ORDER FACILITY'
     WHEN CUST_BUS_TYP_CD='27' THEN 'CLOSED PHARMACY'
     WHEN CUST_BUS_TYP_CD='30' THEN 'HOSPICES'
     WHEN CUST_BUS_TYP_CD='32' THEN 'SURGICENTERS'
     WHEN CUST_BUS_TYP_CD='33' THEN 'EMERGENCY CARE CENTERS'
     WHEN CUST_BUS_TYP_CD='38' THEN 'FED HOSPITAL NON-MILITAR'
     WHEN CUST_BUS_TYP_CD='43' THEN 'COUNTY HOSPITAL'
     WHEN CUST_BUS_TYP_CD='44' THEN 'CITY CORRECT INSTITUTE'
     WHEN CUST_BUS_TYP_CD='46' THEN 'UNIVERSITY HOSPITAL'
     WHEN CUST_BUS_TYP_CD='47' THEN 'HOME IV THERAPY'
     WHEN CUST_BUS_TYP_CD='48' THEN 'ONCOLOGY CENTERS'
     ELSE '' END AS CUSTOMER_TYPE
from PRD_PSAS_ANALYTICS_DB.GOLD_MASTER.VW_CUST_MSTR
where CURRENT_RECORD_IND='Y'
group by 1,2,3;

--COMMON GROUP
CREATE OR REPLACE TEMPORARY TABLE COMMON_GROUP AS
SELECT DISTINCT CUST_ACCT_ID, COMMON_GRP_ID,COMMON_GRP_NAME
FROM PRD_PSAS_DB.EDWRPT.DIM_CUST_ACCT_CURR;
           
 ---------------------final pull 
                
 --FILTER DATA  
CREATE OR REPLACE TABLE SBX_PSAS_DB.ANALYTICS.FY25_MHS_LEADERBOARD_FILTER_MI AS 
SELECT *
FROM AVPS_VPS
WHERE PERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE);

--NET SALES & RANKS
CREATE OR REPLACE TABLE SBX_PSAS_DB.ANALYTICS.FY25_MHS_LEADERBOARD_MI AS
SELECT      a.*,
            NS_RANK.NET_SALES_RANK, 
            IFNULL(TO_VARCHAR(VBCOGS_RANK.VBCOGS_RANK), 9999) AS VBCOGS_RANK, 
            IFNULL(TO_VARCHAR(VAS_RANK.VAS_RANK), 9999) AS VAS_RANK, 
            IFNULL(TO_VARCHAR(RENEWAL_RANK.REN_RANK), 9999) AS VREN_RANK, 
            CASE WHEN QUARTER = '2025, QUARTER 1' THEN 'Q1'
            	WHEN QUARTER = '2025, QUARTER 2' THEN 'Q2'
            	WHEN QUARTER = '2025, QUARTER 3' THEN 'Q3'
            	WHEN QUARTER = '2025, QUARTER 4' THEN 'Q4' END AS Q,
            CASE WHEN B.Award_Eligible IS NULL THEN '<12mo by end of FY'
            ELSE B.Award_Eligible END AS Award_Eligible,
            n.Customer_Type,
            CASE WHEN I.INACTIVE IS NULL THEN ''
            ELSE I.INACTIVE END AS INACTIVE,
            CAST(GETDATE() AS Date) AS REFRESH_DATE,
            CASE WHEN CG.COMMON_GRP_ID='' THEN 'OTHER'
            ELSE CG.COMMON_GRP_ID END AS COMMON_GRP_ID,
            CASE WHEN CG.COMMON_GRP_NAME='' THEN 'OTHER'
            ELSE CG.COMMON_GRP_NAME END AS COMMON_GRP_NAME
FROM        final_fluff a
LEFT JOIN   NS_RANK
ON          a.PAYEEID = NS_RANK.PAYEEID
AND         a.ROLE = NS_RANK.ROLE 
LEFT JOIN VBCOGS_RANK 
ON          a.PAYEEID = VBCOGS_RANK .PAYEEID
AND         a.ROLE = VBCOGS_RANK.ROLE
LEFT JOIN VAS_RANK 
ON          a.PAYEEID = VAS_RANK.PAYEEID
AND         a.ROLE = VAS_RANK.ROLE
LEFT JOIN RENEWAL_RANK 
ON a.PAYEEID = RENEWAL_RANK.PAIDPAYEE 
AND a.ROLE = RENEWAL_RANK.ROLE
LEFT JOIN HIERARCHY B
ON a.PAYEEID = B.PAYEE_ID
LEFT JOIN INACTIVE I
ON a.PAYEEID = I.PAYEEID
LEFT JOIN CUSTOMER_TYPE n 
ON a.accountid = n.accountid
LEFT JOIN COMMON_GROUP CG
ON A.ACCOUNTID = CG.CUST_ACCT_ID
WHERE PERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE);

--VBCOGS 
CREATE OR REPLACE TABLE SBX_PSAS_DB.ANALYTICS.FY25_MHS_LEADERBOARD_VBCOGS_MI AS 
SELECT *
FROM VBCOGS;

--VAS 
CREATE OR REPLACE TABLE SBX_PSAS_DB.ANALYTICS.FY25_MHS_LEADERBOARD_VAS_MI AS 
SELECT * 
FROM VAS;

--RENEWAL 
CREATE OR REPLACE TABLE SBX_PSAS_DB.ANALYTICS.FY25_MHS_LEADERBOARD_REN_MI AS 
SELECT a.*, 
	TO_NUMERIC(PAIDPAYEE) AS PAYEEID
FROM RENEWALS a;


-- CREATE OR REPLACE TABLE SBX_PSAS_DB.ANALYTICS.FY24_MHS_LEADERBOARD_FILTER AS 
-- SELECT * from SBX_PSAS_DB.ANALYTICS.FY24_MHS_LEADERBOARD_FILTER_MI;
